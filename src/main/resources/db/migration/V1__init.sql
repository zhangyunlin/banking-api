-- Customers table
create table customers
(
    id    bigint generated by default as identity primary key,
    name  varchar(100) not null,
    phone varchar(32),
    email varchar(100)
);

-- Accounts table
create table accounts
(
    id          bigint generated by default as identity primary key,
    customer_id bigint         not null,
    number      varchar(32)    not null unique,
    currency    varchar(3)     not null,
    balance     numeric(19, 2) not null default 0,
    status      varchar(16)    not null default 'ACTIVE',
    constraint fk_account_customer foreign key (customer_id) references customers (id)
);

-- Transactions table
create table transactions
(
    id           bigint generated by default as identity primary key,
    account_id   bigint         not null,
    type         varchar(10)    not null, -- 'DEBIT' or 'CREDIT'
    amount       numeric(19, 2) not null,
    currency     char(3)        not null,
    reference    varchar(128),
    counterparty varchar(64),
    created_at   timestamp      not null default current_timestamp,
    constraint fk_txn_account foreign key (account_id) references accounts (id)
);

create index idx_txn_account_created on transactions (account_id, created_at);

-- Idempotency keys table
create table idempotency_keys
(
    id            bigint generated by default as identity primary key,
    scope         varchar(64) not null,
    ikey          varchar(64) not null,
    payload_hash  varchar(64) not null,
    debit_txn_id  bigint,
    credit_txn_id bigint,
    created_at    timestamp   not null default current_timestamp,
    constraint uk_scope_key unique (scope, ikey)
);

-- Users table
create table users
(
    id            bigint generated by default as identity primary key,
    username      varchar(64)  not null unique,
    email         varchar(100),
    phone         varchar(32),
    password_hash varchar(100) not null,
    roles         varchar(100) not null default 'ROLE_USER',
    customer_id   bigint,
    constraint fk_user_customer foreign key (customer_id) references customers (id)
);

-- OTP Tokens table
create table otp_tokens
(
    id          bigint generated by default as identity primary key,
    user_id     bigint       not null,
    destination varchar(100) not null, -- phone or email (here we use phone)
    code_hash   varchar(64)  not null, -- sha-256 of code
    purpose     varchar(32)  not null, -- e.g., 'PASSWORD_RESET'
    expires_at  timestamp    not null,
    consumed    boolean      not null default false,
    attempts    int          not null default 0,
    created_at  timestamp    not null default current_timestamp,
    constraint fk_otp_user foreign key (user_id) references users (id)
);

create index idx_otp_user_purpose on otp_tokens (user_id, purpose, consumed);
create index idx_otp_destination on otp_tokens (destination);
create index idx_users_username_email_phone on users (username, email, phone);


